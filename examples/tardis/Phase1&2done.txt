Disco sketch for Phase 1 & 2 of the Tardis Scenario
Oct 17, 2012

General variables:

userPersonality--a list with a bunch of adjectives to describe user from parts of the dialog
agentPersonality--DH (dominant, hostile) or DF (dominant, friendly)
agentFrustration--numerical values; starts at 1.

   var userPersonality = ""
   userPersonality +=" desperate"

###Mathieu
Phase 1 of Tardis scenario

task Welcome
 subtask Typical
  step Greet
  step ProceedToSeat
  step FoundCompanyEasily
endsubtask
endtask

DTREE: 
  agent id= Greet  text=Good morning {interviewee.name}, my name is {interviewer.name}. I am a senior HR administrator at {company} and will interview you today.
    user text = Hello. /disengagement signs: low voice and energy. No smile or expression. no gestures. head averted.
     eval agentFrustration=agentFrustration + .25
    user text = Good morning ! /friendly behavior : smile, gesture, nod, mutual gaze
	       
	
DTREE
  agent id= ProceedToSeat  text= welcome.enter [DF:Please, go in. DH: Follow me.]
    user text = Ok ! 
	  agent id = SitDown text= welcome.sit [DF:Please, take a seat. DH: Sit down.]
	  
DTREE
  agent id= FoundCompanyEasily  text= Did you find us easily ?
    precondition agentPersonality==DF minOccurs=0
    user text = Yes. /no friendliness signs: no smile or expressions. no gestures.
   	     eval agentFrustration=agentFrustration + .5
    user text = Yes, I did. /low positive friendliness and submission (politeness?): smile, nod. Gaze or head aversion. Limited movement (sweep gesture "it was nothing"). Adaptors
    user text = Yes, thank you, I double checked the location online so it was very easy ! /high friendliness: smiles, nods, gestures, variations in pitch (but overall high) and rythm, mutual gaze
   	  eval agentFrustration=agentFrustration - .5

task Introduction 
 subtask Normal
  step IntroSelf
  step LocateCompany
  step ApplyJob
  step Essentialjobqualities
  step GoodCandidate
 endsubtask
endtask

DTREE: 
  agent id= IntroSelf  text=self.intro  
  	[DF:  I would like to start by asking you to introduce yourself, tell me how you 
	found our company and why you have applied for this job;  DH: me how you found
	 our company and why you applied for the job. ]
    user text = I have been working for the past while as a {position} but now I'm unemployed.  I need a job.
   	      eval agentFrustration=agentFrustration + .5
              eval userPersonality= userPersonality ++ "desperate"
    user text = I have been employed up til now as a {position}.  I saw your advertisement and 
                  looked up your company. I thought my skills matched well with your company.
	      eval locateCompany = T
	      eval userPersonality= userPersonality ++ "motivated"
    user text = Well, I haven't ever had a job, but I'd like to work for you.

  ;;; note that the second two user choices don't change the agent frustration level.  But you might want 
      to do that!
statements in [] are meant to be put in .translate files for each kind of agent.

Dtrees can't have postconditions (just preconditions).  So I have to add a layer of structure for LocateCompany as follows:


DTREE
  agent id=LocateCompany
	text = how.foundus  [DF:Could you please tell me how you found our company and why you have 
	applied for this job?  DH:Tell me how you found this company.  Why did you apply?]
	precondition locateCompany==false minOccurs="0"
   user text= I really needed a job and I saw your advertisement.  You office is near my place so I applied.
   	agentFrustration=agentFrustration + .5
   user text = The position your company advertised fits my skill set.  And your company has a mission that I am interested in.
       	eval agentFrustration=agentFrustration - .5
        eval userPersonality= userPersonality ++ "motivated"
	eval applyJob = true
   user text= I found out about your company in the newspaper.  I looked up {company name} on the web.  I was impressed by your mission statement. 
       	eval agentFrustration=agentFrustration - .5
        eval userPersonality= userPersonality ++ "motivated"
	eval applyJob = true


DTREE
  agent id=ApplyJob
   	precondition agentPersonality==DF or applyJob==false  minOccurs="0"
	text = why.apply  [DF: Can you tell me how your skills relate to the position? DH:<no statement>]
   user text = I think I can do this job.  It's like my last one.
       agentFrustration=agentFrustration + .5
   user text = I am basically organized and hard working.  I learn fast. I can use those skills.
   user text = My previous job as a {position} taught me skills I can use in this position.


DTREE
  agent id=EssentialJobQualities
  	text = essential.qualities [DF: In your opinion, what are the essential qualities for this job?
	       DH:  what are the essential qualities for this job?]
   user text = I think that I will need to be efficient and well organized.
        eval agentFrustration=agentFrustration + .5
	do task=try2essential
   user text = Efficient, well organized, mission focused and ready to learn new skills.
   user text = Being ready to learn whatever I can.

DTREE
  agent id=try2essential
  	 text= try2essential.qualities  [DF:  Can you think of other qualities? DH: what else?]
 	 precondition agentFrustration <= 2
   user text = Be polite.
     	      eval agentFrustration=agentFrustration + .5	      
   user text = Be willing to learn.
   user text = Be willing to ask for help.

DTREE
  agent id=GoodCandidate 
  	text = why.good [DF:Can you tell me why you think you are a good candidate for this job? 
	       DH: so why are you are good for this job?]
   user text= I am usually well organized and nice with people so I think I can perform well in
             this job. In addition, I have experience of doing this type of job.
       	           eval agentFrustration=agentFrustration + .5	      
   user text = I have learned the basic skill set for this job, and I want to learn more.  I can contribute 
       	    to the company's goals because I'm a hard worker and get on with other people.
   user text = I'm polite and hard working. My last job is similar to this one.
       	           eval agentFrustration=agentFrustration + .5	      







