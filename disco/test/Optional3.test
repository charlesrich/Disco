    # Jul 31, 2012 6:37:36 PM - TaskEngine 1.3.3 / Disco 1.5.8
    Welcome to Disco! (Type 'help' for command list)
  > load models/Test.xml
  > task Optional3
    User says "One of us should execute Optional3."
    Agent says "Who should execute Optional3?"
  > say
[1] I should execute Optional3.
[2] You should execute Optional3.
[3] Let's not execute Optional3.
  >> 2
    User says "You should execute Optional3."
    Agent says "What is the Optional3 input1?"
  > done / / / "foo"
    User says "The Optional3 input1 is foo."
    Agent says "What is the Optional3 input2?"
  > say
[1] Chocolate.
[2] Vanilla.
[3] Strawberry.
[4] I don't want to specify input2 for Optional3.
[5] I don't want to specify any more values for Optional3.
[6] Please do not execute Optional3 on foo.
  >> 4
    User says "I don't want to specify input2 for Optional3."
    Agent says "Ok."
  > say
[1] I don't want to specify any more values for Optional3.
[2] Please do not execute Optional3 on foo and null.
  >> 1
    User says "I don't want to specify any more values for Optional3."
    Agent execute Optional3 on foo and null and null.
    Agent says "Yup."
  > task Optional3
    User says "One of us should execute Optional3."
    Agent says "Who should execute Optional3?"
  > say
[1] I should execute Optional3.
[2] You should execute Optional3.
[3] Let's not execute Optional3.
  >> 2
    User says "You should execute Optional3."
    Agent says "What is the Optional3 input1?"
  > done / / / "foo"
    User says "The Optional3 input1 is foo."
    Agent says "What is the Optional3 input2?"
  > say
[1] Chocolate.
[2] Vanilla.
[3] Strawberry.
[4] I don't want to specify input2 for Optional3.
[5] I don't want to specify any more values for Optional3.
[6] Please do not execute Optional3 on foo.
  >> 5
    User says "I don't want to specify any more values for Optional3."
    Agent execute Optional3 on foo and null and null.
    Agent says "Sure."
  > task Optional3
    User says "One of us should execute Optional3."
    Agent says "Who should execute Optional3?"
  > say
[1] I should execute Optional3.
[2] You should execute Optional3.
[3] Let's not execute Optional3.
  >> 2
    User says "You should execute Optional3."
    Agent says "What is the Optional3 input1?"
  > done / / / "foo"
    User says "The Optional3 input1 is foo."
    Agent says "What is the Optional3 input2?"
  >  done edu.wpi.disco.lang.Reject / new Packages.edu.wpi.disco.lang.Propose$What($disco,null,$disco.getPlan($disco.getTaskClass("Optional3")).getGoal(),null,null)
    User says "I don't want to specify any more values for Optional3."
    Agent execute Optional3 on foo and null and null.
    Agent says "Ok."
  > debug
  > history

[Optional3(foo,null,null)] -accepted -done
   User: Propose.Should(Optional3(foo,null,null))
   [Propose.Who(Optional3(foo,null,null),false)] -done
      Agent: Ask.Who(Optional3(foo,null,null),false)
      User: Propose.Who(Optional3(foo,null,null),false)
   [Propose.What(Optional3(foo,null,null),input1,foo)] -done
      Agent: Ask.What(Optional3(foo,null,null),input1,foo)
      User: Propose.What(Optional3(foo,null,null),input1,foo)
   [Propose.What(Optional3(foo,null,null),input2)] -succeeded
      Agent: Ask.What(Optional3(foo,null,null),input2)
      User: Reject(Propose.What(Optional3(foo,null,null),input2))
      Agent: Ok
      User: Reject(Propose.What(Optional3(foo,null,null)))
   Agent: Optional3(foo,null,null)
   Agent: Ok
[Optional3(foo,null,null)] -accepted -done
   User: Propose.Should(Optional3(foo,null,null))
   [Propose.Who(Optional3(foo,null,null),false)] -done
      Agent: Ask.Who(Optional3(foo,null,null),false)
      User: Propose.Who(Optional3(foo,null,null),false)
   [Propose.What(Optional3(foo,null,null),input1,foo)] -done
      Agent: Ask.What(Optional3(foo,null,null),input1,foo)
      User: Propose.What(Optional3(foo,null,null),input1,foo)
   [Propose.What(Optional3(foo,null,null),input2)] -succeeded
      Agent: Ask.What(Optional3(foo,null,null),input2)
      User: Reject(Propose.What(Optional3(foo,null,null)))
   Agent: Optional3(foo,null,null)
   Agent: Ok
[Optional3(foo,null,null)] -accepted -done <-focus
   User: Propose.Should(Optional3(foo,null,null))
   [Propose.Who(Optional3(foo,null,null),false)] -done
      Agent: Ask.Who(Optional3(foo,null,null),false)
      User: Propose.Who(Optional3(foo,null,null),false)
   [Propose.What(Optional3(foo,null,null),input1,foo)] -done
      Agent: Ask.What(Optional3(foo,null,null),input1,foo)
      User: Propose.What(Optional3(foo,null,null),input1,foo)
   [Propose.What(Optional3(foo,null,null),input2)] -succeeded
      Agent: Ask.What(Optional3(foo,null,null),input2)
      User: Reject(Propose.What(Optional3(foo,null,null)))
   Agent: Optional3(foo,null,null)
   Agent: Ok

  > quit
    
